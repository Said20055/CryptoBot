# handlers/proxy.py (–ù–û–í–ê–Ø, –£–õ–£–ß–®–ï–ù–ù–ê–Ø –í–ï–†–°–ò–Ø)

"""
–û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –ø–µ—Ä–µ—Å—ã–ª–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π –º–µ–∂–¥—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º (—á–µ—Ä–µ–∑ FSM)
–∏ –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞–º–∏ –≤ —Ç–µ–º–µ.
–õ–æ–≥–∏–∫–∞ –æ—Å–Ω–æ–≤–∞–Ω–∞ –Ω–∞ —Ä–∞–±–æ—á–µ–º –ø—Ä–∏–º–µ—Ä–µ —Å–∏—Å—Ç–µ–º—ã –ø–æ–¥–¥–µ—Ä–∂–∫–∏.
"""
from aiogram import Router, F, Bot
from aiogram.types import Message, CallbackQuery
from aiogram.fsm.context import FSMContext
from aiogram.exceptions import AiogramError

from config import SUPPORT_GROUP_ID
from utils.logging_config import logger
from utils.database.db_helpers import get_active_order_for_user, get_order_by_topic_id
import utils.texts as texts
from utils.states import TransactionStates

# --- –†–û–£–¢–ï–†–´ ---
# –°–æ–∑–¥–∞–µ–º –¥–≤–∞ —Ä–æ—É—Ç–µ—Ä–∞, –∫–∞–∫ –∏ —Ä–∞–Ω—å—à–µ: –æ–¥–∏–Ω –¥–ª—è –õ–°, –¥—Ä—É–≥–æ–π –¥–ª—è –≥—Ä—É–ø–ø—ã
private_message_router = Router()
group_message_router = Router()
# –°—Ä–∞–∑—É –ø—Ä–∏–º–µ–Ω—è–µ–º —Ñ–∏–ª—å—Ç—Ä –Ω–∞ ID –≥—Ä—É–ø–ø—ã –∫–æ –≤—Å–µ–º —Ö–µ–Ω–¥–ª–µ—Ä–∞–º –≤ —ç—Ç–æ–º —Ä–æ—É—Ç–µ—Ä–µ
group_message_router.message.filter(F.chat.id == SUPPORT_GROUP_ID)


# =============================================================================
# --- –õ–û–ì–ò–ö–ê –î–õ–Ø –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø (–í–•–û–î –í –ß–ê–¢ –ò –û–¢–ü–†–ê–í–ö–ê –°–û–û–ë–©–ï–ù–ò–ô) ---
# =============================================================================

@private_message_router.callback_query(F.data.startswith('reply_to_'))
async def initiate_operator_reply_handler(callback_query: CallbackQuery, state: FSMContext):
    """
    –ò–Ω–∏—Ü–∏–∏—Ä—É–µ—Ç —Å–µ—Å—Å–∏—é –ø–µ—Ä–µ–ø–∏—Å–∫–∏ —Å –æ–ø–µ—Ä–∞—Ç–æ—Ä–æ–º.
    –°—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–∞ –∫–Ω–æ–ø–∫–∏ 'reply_to_active_order' –∏ 'reply_to_operator'.
    """
    user_id = callback_query.from_user.id
    active_order = await get_active_order_for_user(user_id)

    if not active_order:
        await callback_query.answer("‚ö†Ô∏è –£ –≤–∞—Å –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞—è–≤–æ–∫ –¥–ª—è –æ—Ç–≤–µ—Ç–∞.", show_alert=True)
        return

    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –¥–∏–∞–ª–æ–≥–∞
    await state.set_state(TransactionStates.waiting_for_operator_reply)
    await callback_query.message.answer(
        "‚úçÔ∏è –í—ã –≤–æ—à–ª–∏ –≤ —Ä–µ–∂–∏–º —á–∞—Ç–∞ —Å –æ–ø–µ—Ä–∞—Ç–æ—Ä–æ–º. –í—Å–µ –≤–∞—à–∏ —Å–ª–µ–¥—É—é—â–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –±—É–¥—É—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã –≤ –≤–∞—à—É –∑–∞—è–≤–∫—É.\n\n"
        "–ß—Ç–æ–±—ã –≤—ã–π—Ç–∏ –∏–∑ —ç—Ç–æ–≥–æ —Ä–µ–∂–∏–º–∞, –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ.",
        reply_markup=texts.get_persistent_reply_keyboard() # –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –∫–Ω–æ–ø–∫–æ–π "–ó–∞–≤–µ—Ä—à–∏—Ç—å –¥–∏–∞–ª–æ–≥"
    )
    await callback_query.answer()


@private_message_router.message(TransactionStates.waiting_for_operator_reply, F.chat.type == "private")
async def user_message_to_topic_handler(message: Message, state: FSMContext):
    """
    –õ–æ–≤–∏—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ —á–∞—Ç–∞ –∏ –ü–ï–†–ï–°–´–õ–ê–ï–¢ –µ–≥–æ –≤ —Ç–µ–º—É.
    –ò—Å–ø–æ–ª—å–∑—É–µ–º message.forward() –∫–∞–∫ –≤ –ø—Ä–∏–º–µ—Ä–µ, —á—Ç–æ–±—ã –æ–ø–µ—Ä–∞—Ç–æ—Ä –≤–∏–¥–µ–ª, –æ—Ç –∫–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏–µ.
    """
    user_id = message.from_user.id
    active_order = await get_active_order_for_user(user_id)

    if not active_order or not active_order.get('topic_id'):
        await message.answer("‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –≤–∞—à—É –∞–∫—Ç–∏–≤–Ω—É—é –∑–∞—è–≤–∫—É. –í–æ–∑–º–æ–∂–Ω–æ, –æ–Ω–∞ —É–∂–µ –∑–∞–∫—Ä—ã—Ç–∞. –í—ã –≤—ã–≤–µ–¥–µ–Ω—ã –∏–∑ —Ä–µ–∂–∏–º–∞ —á–∞—Ç–∞.")
        await state.clear()
        return

    topic_id = active_order['topic_id']
    try:
        # –ò—Å–ø–æ–ª—å–∑—É–µ–º forward –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∞–≤—Ç–æ—Ä—Å—Ç–≤–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
        await message.forward(
            chat_id=SUPPORT_GROUP_ID,
            message_thread_id=topic_id
        )
    except Exception as e:
        logger.error(f"Failed to forward user message from {user_id} to topic {topic_id}: {e}")
        await message.answer("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")


@private_message_router.callback_query(F.data == 'end_reply_session')
async def end_reply_session_handler(callback_query: CallbackQuery, state: FSMContext):
    """–ó–∞–≤–µ—Ä—à–∞–µ—Ç —Å–µ—Å—Å–∏—é –ø–µ—Ä–µ–ø–∏—Å–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞–º–∏ (–æ—á–∏—â–∞–µ—Ç FSM)."""
    await state.clear()
    await callback_query.answer("‚úÖ –í—ã –≤—ã—à–ª–∏ –∏–∑ —Ä–µ–∂–∏–º–∞ –ø–µ—Ä–µ–ø–∏—Å–∫–∏.", show_alert=True)
    try:
        # –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–æ–π "–ó–∞–≤–µ—Ä—à–∏—Ç—å –¥–∏–∞–ª–æ–≥"
        await callback_query.message.delete()
    except AiogramError:
        pass


# =============================================================================
# --- –õ–û–ì–ò–ö–ê –î–õ–Ø –û–ü–ï–†–ê–¢–û–†–ê (–û–¢–í–ï–¢ –ò–ó –¢–ï–ú–´ –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Æ) ---
# =============================================================================

@group_message_router.message(F.is_topic_message == True)
async def operator_reply_to_user_handler(message: Message, bot: Bot):
    """
    –ü–µ—Ä–µ—Ö–≤–∞—Ç—ã–≤–∞–µ—Ç –æ—Ç–≤–µ—Ç –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞ –≤ —Ç–µ–º–µ –∏ –ø–µ—Ä–µ—Å—ã–ª–∞–µ—Ç –µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é.
    –õ–æ–≥–∏–∫–∞ –ø–æ–ª–Ω–æ—Å—Ç—å—é –∞–¥–∞–ø—Ç–∏—Ä–æ–≤–∞–Ω–∞ –∏–∑ —Ä–∞–±–æ—á–µ–≥–æ –ø—Ä–∏–º–µ—Ä–∞.
    """
    # –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç —Å–∞–º–æ–≥–æ –±–æ—Ç–∞ (—Å–ª—É–∂–µ–±–Ω—ã–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∏ —Ç.–¥.)
    if message.from_user.id == bot.id:
        return

    # –ò—â–µ–º –∑–∞—è–≤–∫—É (–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è) –ø–æ ID —Ç–µ–º—ã, –≤ –∫–æ—Ç–æ—Ä–æ–π –Ω–∞–ø–∏—Å–∞–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ
    order_info = await get_order_by_topic_id(message.message_thread_id)
    if not order_info or not order_info.get('user_id'):
        # –ï—Å–ª–∏ –∑–∞—è–≤–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞, –Ω–∏—á–µ–≥–æ –Ω–µ –¥–µ–ª–∞–µ–º. –≠—Ç–æ –º–æ–∂–µ—Ç –±—ã—Ç—å —Å–∏—Å—Ç–µ–º–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ.
        return

    user_id = order_info.get('user_id')
    header = "üí¨ <b>–û—Ç–≤–µ—Ç –æ—Ç –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞:</b>\n\n" # "–®–∞–ø–∫–∞", –∫–∞–∫ –≤ –ø—Ä–∏–º–µ—Ä–µ

    try:
        # 1. –ï—Å–ª–∏ –æ–ø–µ—Ä–∞—Ç–æ—Ä –æ—Ç–ø—Ä–∞–≤–∏–ª —Ç–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç
        if message.text:
            await bot.send_message(
                chat_id=user_id,
                text=header + message.html_text, # –ò—Å–ø–æ–ª—å–∑—É–µ–º html_text –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
                parse_mode="HTML"
            )
        # 2. –ï—Å–ª–∏ –æ–ø–µ—Ä–∞—Ç–æ—Ä –æ—Ç–ø—Ä–∞–≤–∏–ª –º–µ–¥–∏–∞ —Å –ø–æ–¥–ø–∏—Å—å—é (caption)
        elif message.caption:
            await message.copy_to(
                chat_id=user_id,
                caption=header + message.html_captio,
                parse_mode="HTML"
                
            )
        # 3. –ï—Å–ª–∏ –æ–ø–µ—Ä–∞—Ç–æ—Ä –æ—Ç–ø—Ä–∞–≤–∏–ª –º–µ–¥–∏–∞ –ë–ï–ó –ø–æ–¥–ø–∏—Å–∏
        else:
            # –°–Ω–∞—á–∞–ª–∞ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º "—à–∞–ø–∫—É"
            await bot.send_message(user_id, header)
            # –ó–∞—Ç–µ–º –∫–æ–ø–∏—Ä—É–µ–º –º–µ–¥–∏–∞—Ñ–∞–π–ª
            await message.copy_to(
                chat_id=user_id,
                parse_mode="HTML"
            )

    except Exception as e:
        logger.error(f"Failed to proxy reply to user {user_id}: {e}", exc_info=True)
        # –ï—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å, –æ—Ç–≤–µ—á–∞–µ–º –æ–ø–µ—Ä–∞—Ç–æ—Ä—É –≤ —Ç–µ–º—É, –∫–∞–∫ –≤ –ø—Ä–∏–º–µ—Ä–µ
        await message.reply(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –¥–æ—Å—Ç–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id}. –í–æ–∑–º–æ–∂–Ω–æ, –æ–Ω –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–ª –±–æ—Ç–∞.")