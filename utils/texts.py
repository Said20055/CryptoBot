from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from typing import Tuple

# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –Ω–∞—à–∏ —Ñ–∞–±—Ä–∏–∫–∏ –∫–æ–ª–±–µ–∫–æ–≤
from .callbacks import CryptoInputSwitch, CryptoSelection, RubInputSwitch

def format_user_display_name(username: str) -> str:
    """–§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è."""
    if not username or username in ["–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å", "–ù–µ—Ç username"]:
        return "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å"
    
    if ' ' not in username and not username.startswith('@'):
        return f"@{username}"
    
    return username

# --- –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã –¥–ª—è –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é ---
WELCOME_PHOTO_URL = "AgACAgIAAxkBAAOCaMe8_YoQvR8VmQgxGrvwJ2Ew8bQAAqP4MRvD4zhKhf8sL6uWlyABAAMCAAN5AAM2BA"

WELCOME_TEXT = (
    "üëã *–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ ExpressObmen P2P!*\n\n"
    "üí∏ *–û–±–º–µ–Ω –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—ã –±–µ–∑ –ª–∏—à–Ω–∏—Ö –∫–æ–º–∏—Å—Å–∏–π –∏ –∑–∞–¥–µ—Ä–∂–µ–∫!*\n"
    "‚ö°Ô∏è *–°–∞–º—ã–µ –Ω–∏–∑–∫–∏–µ –∫–æ–º–∏—Å—Å–∏–∏ –Ω–∞ —Ä—ã–Ω–∫–µ* ‚Äî –º—ã –∑–∞–±–æ—Ç–∏–º—Å—è –æ –≤–∞—à–µ–º –±—é–¥–∂–µ—Ç–µ!\n"
    "üîí *–ë–µ–∑–æ–ø–∞—Å–Ω—ã–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏* –∏ –≥–∞—Ä–∞–Ω—Ç–∏—è –Ω–∞–¥–µ–∂–Ω–æ—Å—Ç–∏.\n"
    "üöÄ *–ú–æ–º–µ–Ω—Ç–∞–ª—å–Ω—ã–µ –æ–±–º–µ–Ω—ã 24/7* –≤ –ø–∞—Ä—É –∫–ª–∏–∫–æ–≤.\n"
    "üì± *–£–¥–æ–±–Ω—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –ø—Ä—è–º–æ –≤ Telegram* ‚Äî –ø—Ä–æ—Å—Ç–æ –≤—ã–±–µ—Ä–∏—Ç–µ –≤–∞–ª—é—Ç—É –∏ —Å—É–º–º—É!\n\n"
    "*–ù–∞—á–Ω–∏—Ç–µ –æ–±–º–µ–Ω –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å* –∏ –æ—â—É—Ç–∏—Ç–µ —Å–∫–æ—Ä–æ—Å—Ç—å –∏ –≤—ã–≥–æ–¥—É —Å *ExpressObmen P2P!*\n\n"
)

HELP_TEXT = "–ø–∞–º–∞–≥–∏—Ç–µ"

# --- –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä ---

def get_main_keyboard() -> InlineKeyboardMarkup:
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –≥–ª–∞–≤–Ω—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–∞–º–∏."""
    keyboard = InlineKeyboardMarkup(
        inline_keyboard=[
            [
                InlineKeyboardButton(text="üõí –ö—É–ø–∏—Ç—å –∫—Ä–∏–ø—Ç—É", callback_data="buy"),
                InlineKeyboardButton(text="üí∏ –ü—Ä–æ–¥–∞—Ç—å –∫—Ä–∏–ø—Ç—É", callback_data="sell"),
            ],
            [
                InlineKeyboardButton(text="üë®‚Äçüíº –û–ø–µ—Ä–∞—Ç–æ—Ä", url="https://t.me/jenya2hh"),
                InlineKeyboardButton(text="üë§ –ü—Ä–æ—Ñ–∏–ª—å", callback_data="profile"),
            ],
            [
                InlineKeyboardButton(text="üéÅ –ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–æ–º–æ–∫–æ–¥", callback_data="activate_promo"),
            ],
            [
                InlineKeyboardButton(text="‚≠ê –û—Ç–∑—ã–≤—ã", url="https://t.me/ExpressObmenChannel"),
            ],
        ]
    )
    return keyboard

def get_back_to_main_menu_keyboard() -> InlineKeyboardMarkup:
    """–£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é."""
    return InlineKeyboardMarkup(
        inline_keyboard=[
            [InlineKeyboardButton(text="‚¨ÖÔ∏è –í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="main_menu")]
        ]
    )

def get_crypto_selection_keyboard(action: str) -> InlineKeyboardMarkup:
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –≤—ã–±–æ—Ä–∞ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—ã, –∏—Å–ø–æ–ª—å–∑—É—è CallbackData."""
    keyboard = InlineKeyboardMarkup(
        inline_keyboard=[
            [
                InlineKeyboardButton(text="üü° Bitcoin (BTC)", callback_data=CryptoSelection(action=action, crypto="BTC").pack()),
                InlineKeyboardButton(text="‚ö°Ô∏è Litecoin (LTC)", callback_data=CryptoSelection(action=action, crypto="LTC").pack())
            ],
            [
                InlineKeyboardButton(text="üî∑ TRON (TRX)", callback_data=CryptoSelection(action=action, crypto="TRX").pack()),
                InlineKeyboardButton(text="üíµ Tether (USDT)", callback_data=CryptoSelection(action=action, crypto="USDT").pack())
            ],
            [InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="main_menu")]
        ]
    )
    return keyboard

def get_crypto_details_keyboard(action: str, crypto: str) -> InlineKeyboardMarkup:
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è –Ω–∞ –≤–≤–æ–¥ –≤ —Ä—É–±–ª—è—Ö."""
    keyboard = InlineKeyboardMarkup(
        inline_keyboard=[
            [
                InlineKeyboardButton(text="üîÑ –í–≤–µ—Å—Ç–∏ —Å—É–º–º—É –≤ ‚ÇΩ", callback_data=RubInputSwitch(action=action, crypto=crypto).pack())
            ],
            [InlineKeyboardButton(text="‚¨ÖÔ∏è –û—Ç–º–µ–Ω–∞", callback_data="cancel_transaction")]
        ]
    )
    return keyboard

def get_rub_input_keyboard(action: str, crypto: str) -> InlineKeyboardMarkup:
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –∫ –≤–≤–æ–¥—É –≤ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–µ."""
    keyboard = InlineKeyboardMarkup(
        inline_keyboard=[
            [
                InlineKeyboardButton(
                    text=f"üîÑ –í–≤–µ—Å—Ç–∏ —Å—É–º–º—É –≤ {crypto}", 
                    callback_data=CryptoInputSwitch(action=action, crypto=crypto).pack()
                )
            ],
            [InlineKeyboardButton(text="‚¨ÖÔ∏è –û—Ç–º–µ–Ω–∞", callback_data="cancel_transaction")]
        ]
    )
    return keyboard

def get_payment_method_keyboard() -> InlineKeyboardMarkup:
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –≤—ã–±–æ—Ä–∞ —Å–ø–æ—Å–æ–±–∞ –æ–ø–ª–∞—Ç—ã."""
    rows = [
        [InlineKeyboardButton(text="üí≥ –°–ë–ü", callback_data="payment_sbp")],
        [InlineKeyboardButton(text="üë®‚Äçüíº –ß–µ—Ä–µ–∑ –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞", callback_data="payment_operator")],
        [InlineKeyboardButton(text="‚¨ÖÔ∏è –û—Ç–º–µ–Ω–∞", callback_data="cancel_transaction")],
    ]
    return InlineKeyboardMarkup(inline_keyboard=rows)

def get_final_actions_keyboard(order_id: int) -> InlineKeyboardMarkup:
    """
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –ø–æ—Å–ª–µ —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞—è–≤–∫–∏ (–ò–°–ü–†–ê–í–õ–ï–ù–ù–ê–Ø –í–ï–†–°–ò–Ø).
    –ö–Ω–æ–ø–∫–∞ –æ—Ç–º–µ–Ω—ã —Ç–µ–ø–µ—Ä—å —Å–æ–¥–µ—Ä–∂–∏—Ç ID –∑–∞—è–≤–∫–∏.
    """
    rows = [
        # --- –ò–ó–ú–ï–ù–ï–ù–ò–ï –ó–î–ï–°–¨ ---
        [InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∏—Ç—å –∑–∞—è–≤–∫—É", callback_data=f"cancel_order_{order_id}")],
        [InlineKeyboardButton(text="üë®‚Äçüíº –°–≤—è–∑–∞—Ç—å—Å—è —Å –æ–ø–µ—Ä–∞—Ç–æ—Ä–æ–º", url="https://t.me/jenya2hh")],
    ]
    return InlineKeyboardMarkup(inline_keyboard=rows)

def get_admin_reply_keyboard(user_id: int) -> InlineKeyboardMarkup:
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–æ–π "–û—Ç–≤–µ—Ç–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é" –¥–ª—è –∞–¥–º–∏–Ω–∞."""
    return InlineKeyboardMarkup(
        inline_keyboard=[
            [InlineKeyboardButton(text="üí¨ –û—Ç–≤–µ—Ç–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é", callback_data=f"admin_reply_{user_id}")]
        ]
    )
def get_reply_to_operator_keyboard() -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –æ—Ç–≤–µ—Ç–∞ –æ–ø–µ—Ä–∞—Ç–æ—Ä—É (–¥–æ–±–∞–≤–ª—è–µ—Ç—Å—è –∫ —Å–æ–æ–±—â–µ–Ω–∏—è–º –æ—Ç –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞)."""
    return InlineKeyboardMarkup(
        inline_keyboard=[
            [InlineKeyboardButton(text="üí¨ –û—Ç–≤–µ—Ç–∏—Ç—å –æ–ø–µ—Ä–∞—Ç–æ—Ä—É", callback_data="reply_to_operator")]
        ]
    )

# --- –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Ç–µ–∫—Å—Ç–æ–≤ —Å–æ–æ–±—â–µ–Ω–∏–π ---

SELL_CRYPTO_TEXT = "*üßæ –ú–µ–Ω—é –ø—Ä–æ–¥–∞–∂–∏*\n\n–í—ã–±–µ—Ä–∏—Ç–µ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—É –¥–ª—è –ø—Ä–æ–¥–∞–∂–∏ –∏ —Å–ª–µ–¥—É–π—Ç–µ –ø–æ–¥—Å–∫–∞–∑–∫–∞–º."
BUY_CRYPTO_TEXT = "*üßæ –ú–µ–Ω—é –ø–æ–∫—É–ø–∫–∏*\n\n–í—ã–±–µ—Ä–∏—Ç–µ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—É –¥–ª—è –ø–æ–∫—É–ø–∫–∏ –∏ —Å–ª–µ–¥—É–π—Ç–µ –ø–æ–¥—Å–∫–∞–∑–∫–∞–º."
OPERATOR_CONTACT_TEXT = "üë®‚Äçüíº *–°–≤—è–∑—å —Å –æ–ø–µ—Ä–∞—Ç–æ—Ä–æ–º:* @jenya2hh\n\n–ù–∞–ø–∏—à–∏—Ç–µ –æ–ø–µ—Ä–∞—Ç–æ—Ä—É –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–º–æ—â–∏ —Å –æ–±–º–µ–Ω–æ–º."
SEND_TX_LINK_PROMPT = "üìé *–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é –≤ –±–ª–æ–∫—á–µ–π–Ω–µ.*\n\n–ü–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏ –æ–ø–µ—Ä–∞—Ç–æ—Ä –ø—Ä–æ–≤–µ—Ä–∏—Ç –µ–µ –∏ –æ–±—Ä–∞–±–æ—Ç–∞–µ—Ç –∑–∞—è–≤–∫—É."
REPLY_TO_OPERATOR_PROMPT = "üí¨ *–û—Ç–ø—Ä–∞–≤—å—Ç–µ –≤–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞:*"

def get_crypto_prompt_text(action: str, crypto: str, rate: float) -> str:
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π —Ç–µ–∫—Å—Ç —Å –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ–º –≤–≤–µ—Å—Ç–∏ —Å—É–º–º—É –≤ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–µ."""
    if action == 'sell':
        action_text = f"*–ü—Ä–æ–¥–∞–∂–∞ {crypto}*"
        prompt_text = f"–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –≤ *{crypto}*, –∫–æ—Ç–æ—Ä—É—é –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø—Ä–æ–¥–∞—Ç—å."
    else:
        action_text = f"*–ü–æ–∫—É–ø–∫–∞ {crypto}*"
        prompt_text = f"–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –≤ *{crypto}*, –∫–æ—Ç–æ—Ä—É—é –≤—ã —Ö–æ—Ç–∏—Ç–µ –∫—É–ø–∏—Ç—å."

    formatted_rate = f"{rate:,.2f}".replace(",", " ")
    return (
        f"{action_text}\n\n"
        f"–¢–µ–∫—É—â–∏–π –∫—É—Ä—Å: `1 {crypto} ‚âà {formatted_rate} RUB`\n\n"
        f"{prompt_text}"
    )

def get_rub_prompt_text(action: str, crypto: str, rate: float) -> str:
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π —Ç–µ–∫—Å—Ç —Å –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ–º –≤–≤–µ—Å—Ç–∏ —Å—É–º–º—É –≤ —Ä—É–±–ª—è—Ö."""
    if action == 'sell':
        action_text = f"*–ü—Ä–æ–¥–∞–∂–∞ {crypto}*"
        prompt_text = f"–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –≤ *RUB*, –Ω–∞ –∫–æ—Ç–æ—Ä—É—é –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø—Ä–æ–¥–∞—Ç—å *{crypto}*."
    else:
        action_text = f"*–ü–æ–∫—É–ø–∫–∞ {crypto}*"
        prompt_text = f"–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –≤ *RUB*, –Ω–∞ –∫–æ—Ç–æ—Ä—É—é –≤—ã —Ö–æ—Ç–∏—Ç–µ –∫—É–ø–∏—Ç—å *{crypto}*."

    formatted_rate = f"{rate:,.2f}".replace(",", " ")
    return (
        f"{action_text}\n\n"
        f"–¢–µ–∫—É—â–∏–π –∫—É—Ä—Å: `1 {crypto} ‚âà {formatted_rate} RUB`\n\n"
        f"{prompt_text}"
    )

def get_transaction_summary_text(
    action: str, crypto: str, amount_crypto: float, amount_rub: float,
    total_amount: float, service_commission_rub: float, network_fee_rub: float,
    promo_applied: bool
) -> str:
    """–§–æ—Ä–º–∏—Ä—É–µ—Ç –∏—Ç–æ–≥–æ–≤—ã–π —Ç–µ–∫—Å—Ç —Å —Ä–∞—Å—á–µ—Ç–æ–º —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è."""
    amount_crypto_str = f"{amount_crypto:,.8f}".rstrip('0').rstrip('.')
    amount_rub_str = f"{amount_rub:,.2f}".replace(",", " ")
    service_commission_str = f"{service_commission_rub:,.2f}".replace(",", " ")
    network_fee_str = f"{network_fee_rub:,.2f}".replace(",", " ")
    total_amount_str = f"{total_amount:,.2f}".replace(",", " ")

    action_title = f"*–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –ø—Ä–æ–¥–∞–∂—É {crypto}*" if action == 'sell' else f"*–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –ø–æ–∫—É–ø–∫—É {crypto}*"
    final_line_title = "–ò—Ç–æ–≥–æ –∫ –ø–æ–ª—É—á–µ–Ω–∏—é:" if action == 'sell' else "–ò—Ç–æ–≥–æ –∫ –æ–ø–ª–∞—Ç–µ:"

    details = [
        f"üíé *–°—É–º–º–∞ –≤ {crypto}:* `{amount_crypto_str}`",
        f"üí∞ *–≠–∫–≤–∏–≤–∞–ª–µ–Ω—Ç –≤ —Ä—É–±–ª—è—Ö:* `{amount_rub_str} RUB`"
    ]

    if promo_applied:
        details.append("\n‚úÖ *–ü—Ä–æ–º–æ–∫–æ–¥ –ø—Ä–∏–º–µ–Ω–µ–Ω*")
        details.append(f"  - –ö–æ–º–∏—Å—Å–∏—è —Å–µ—Ä–≤–∏—Å–∞: `0.00 RUB`")
        details.append(f"  - –ö–æ–º–∏—Å—Å–∏—è —Å–µ—Ç–∏: `0.00 RUB`")
    else:
        details.append("\nüßæ *–ö–æ–º–∏—Å—Å–∏–∏*")
        details.append(f"  - –ö–æ–º–∏—Å—Å–∏—è —Å–µ—Ä–≤–∏—Å–∞: `{service_commission_str} RUB`")
        details.append(f"  - –ö–æ–º–∏—Å—Å–∏—è —Å–µ—Ç–∏: `{network_fee_str} RUB`")

    details_str = "\n".join(details)
    return (
        f"{action_title}\n"
        f"‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n"
        f"{details_str}\n"
        f"‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n"
        f"*{final_line_title}* `{total_amount_str} RUB`\n\n"
        f"–í—ã–±–µ—Ä–∏—Ç–µ —Å–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã/–ø–æ–ª—É—á–µ–Ω–∏—è:"
    )

def get_sbp_sell_details_text(crypto: str, amount_crypto: float, amount_rub: float, wallet_address: str) -> str:
    """–¢–µ–∫—Å—Ç –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø—Ä–∏ –ø—Ä–æ–¥–∞–∂–µ —á–µ—Ä–µ–∑ –°–ë–ü."""
    amount_crypto_str = f"{amount_crypto:,.8f}".rstrip('0').rstrip('.')
    amount_rub_str = f"{amount_rub:,.2f}".replace(",", " ")
    
    if wallet_address:
        wallet_line = f"`{wallet_address}`"
    else:
        wallet_line = "–í—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ –ø—Ä–∏–Ω–∏–º–∞–µ–º."
        
    return (
        f"üí≥ *–ü—Ä–æ–¥–∞–∂–∞ {crypto}*\n"
        f"‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n"
        f"üíé *–°—É–º–º–∞:* `{amount_crypto_str} {crypto}`\n"
        f"üí∞ *–í—ã –ø–æ–ª—É—á–∏—Ç–µ:* `{amount_rub_str} RUB`\n"
        f"‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n\n"
        f"üì§ *–ê–¥—Ä–µ—Å –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ {crypto}:*\n"
        f"{wallet_line}\n\n"
        f"–£–∫–∞–∂–∏—Ç–µ –≤–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –±–∞–Ω–∫–∞ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ä—É–±–ª–µ–π\n"
        f"*–ü—Ä–∏–º–µ—Ä:* `+79991234567, –°–±–µ—Ä–±–∞–Ω–∫`"
    )

def get_sbp_buy_details_text(crypto: str, amount_crypto: float, total_amount: float, sbp_phone: str, sbp_bank: str) -> str:
    """–¢–µ–∫—Å—Ç –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø—Ä–∏ –ø–æ–∫—É–ø–∫–µ —á–µ—Ä–µ–∑ –°–ë–ü."""
    amount_crypto_str = f"{amount_crypto:,.8f}".rstrip('0').rstrip('.')
    total_amount_str = f"{total_amount:,.2f}".replace(",", " ")
    
    return (
        f"üí≥ *–ü–æ–∫—É–ø–∫–∞ {crypto}*\n"
        f"‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n"
        f"üíé *–í—ã –ø–æ–ª—É—á–∏—Ç–µ:* `{amount_crypto_str} {crypto}`\n"
        f"üí∞ *–ö –æ–ø–ª–∞—Ç–µ:* `{total_amount_str} RUB`\n"
        f"‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n\n"
        f"üì± *–†–µ–∫–≤–∏–∑–∏—Ç—ã –¥–ª—è –æ–ø–ª–∞—Ç—ã:*\n"
        f"  - –ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞: `{sbp_phone}`\n"
        f"  - –ë–∞–Ω–∫: *{sbp_bank}*\n\n"
        f"–£–∫–∞–∂–∏—Ç–µ –∞–¥—Ä–µ—Å –≤–∞—à–µ–≥–æ *{crypto}* –∫–æ—à–µ–ª—å–∫–∞ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—ã."
    )

def get_final_confirmation_text(
    action: str, crypto: str, amount_crypto: float,
    total_amount: float, user_input: str, order_number: int
) -> str:
    """–§–∏–Ω–∞–ª—å–Ω–æ–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ—Å–ª–µ —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞—è–≤–∫–∏."""
    direction = "–ü—Ä–æ–¥–∞–∂–∞" if action == "sell" else "–ü–æ–∫—É–ø–∫–∞"
    final_amount_str = f"{total_amount:,.2f}".replace(",", " ")
    
    return (
        f"‚úÖ *–ó–∞—è–≤–∫–∞ #{order_number} –Ω–∞ {direction.lower()} —Å–æ–∑–¥–∞–Ω–∞! –û–ø–µ—Ä–∞—Ç–æ—Ä —Å–∫–æ—Ä–æ —Å –≤–∞–º–∏ —Å–≤—è–∂–µ—Ç—Å—è.*\n"
        f"‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n"
        f"üíé *–°—É–º–º–∞:* `{f'{amount_crypto:,.8f}'.rstrip('0').rstrip('.')} {crypto}`\n"
        f"üí∞ *–ò—Ç–æ–≥–æ–≤–∞—è —Å—É–º–º–∞:* `{final_amount_str} RUB`\n"
        f"üìù *–í–∞—à–∏ —Ä–µ–∫–≤–∏–∑–∏—Ç—ã:* `{user_input}`\n"
        f"‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n"
        f"–û–∂–∏–¥–∞–π—Ç–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –æ—Ç –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞."
    )

def get_admin_order_notification(
    order_id: int,
    order_number: int,
    user_id: int,
    username: str,
    order_data: dict,
    user_input: str
) -> Tuple[str, InlineKeyboardMarkup]:
    """
    –§–æ—Ä–º–∏—Ä—É–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –¥–ª—è –∞–¥–º–∏–Ω–∞ –æ –Ω–æ–≤–æ–π –∑–∞—è–≤–∫–µ (–§–ò–ù–ê–õ–¨–ù–ê–Ø –í–ï–†–°–ò–Ø).
    –ü—Ä–∏–Ω–∏–º–∞–µ—Ç –∏ order_id (–¥–ª—è –∫–Ω–æ–ø–æ–∫), –∏ order_number (–¥–ª—è —Ç–µ–∫—Å—Ç–∞).
    """
    action = order_data.get('action', 'N/A').title()
    crypto = order_data.get('crypto', 'N/A')
    
    # –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —á–∏—Å–ª–æ–≤—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π –¥–ª—è –∫—Ä–∞—Å–∏–≤–æ–≥–æ –≤—ã–≤–æ–¥–∞
    amount_crypto_str = f"{order_data.get('amount_crypto', 0):,.8f}".rstrip('0').rstrip('.')
    amount_rub_str = f"{order_data.get('amount_rub', 0):,.2f}".replace(",", " ")
    service_commission_str = f"{order_data.get('service_commission_rub', 0):,.2f}".replace(",", " ")
    network_fee_str = f"{order_data.get('network_fee_rub', 0):,.2f}".replace(",", " ")
    total_amount_str = f"{order_data.get('total_amount', 0):,.2f}".replace(",", " ")
    
    user_details_title = "–†–µ–∫–≤–∏–∑–∏—Ç—ã –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è RUB:" if order_data.get('action') == 'sell' else f"–ê–¥—Ä–µ—Å –∫–æ—à–µ–ª—å–∫–∞ {crypto}:"

    # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–ø–∏—Å–æ–∫ —Å –¥–µ—Ç–∞–ª—è–º–∏ –∑–∞—è–≤–∫–∏
    details = [
        f"üë§ *–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:* {format_user_display_name(username)} (`{user_id}`)",
        f"\n*–î–µ—Ç–∞–ª–∏ –∑–∞—è–≤–∫–∏:*",
        f"  - *–¢–∏–ø:* {action} {crypto}",
        f"  - *–°—É–º–º–∞ –≤ –∫—Ä–∏–ø—Ç–µ:* `{amount_crypto_str} {crypto}`",
        f"  - *–≠–∫–≤–∏–≤–∞–ª–µ–Ω—Ç –≤ RUB (—á–∏—Å—Ç—ã–º–∏):* `{amount_rub_str} RUB`",
        f"\n*–ö–æ–º–∏—Å—Å–∏–∏:*",
        f"  - *–°–µ—Ä–≤–∏—Å:* `{service_commission_str} RUB`",
        f"  - *–°–µ—Ç—å:* `{network_fee_str} RUB`",
        f"\n*–ò—Ç–æ–≥–æ–≤–∞—è —Å—É–º–º–∞:* `{total_amount_str} RUB`",
        f"\n*{user_details_title}*",
        f"`{user_input}`"
    ]
    
    # –ï—Å–ª–∏ –±—ã–ª –ø—Ä–∏–º–µ–Ω–µ–Ω –ø—Ä–æ–º–æ–∫–æ–¥, –¥–æ–±–∞–≤–ª—è–µ–º –ø–ª–∞—à–∫—É
    if order_data.get('promo_applied'):
        details.insert(1, "‚úÖ *–ò–°–ü–û–õ–¨–ó–û–í–ê–ù –ü–†–û–ú–û–ö–û–î*")

    # –ë–µ–∑–æ–ø–∞—Å–Ω–æ –æ–±—ä–µ–¥–∏–Ω—è–µ–º –¥–µ—Ç–∞–ª–∏ –≤ –æ–¥–Ω—É —Å—Ç—Ä–æ–∫—É
    details_str = "\n".join(details)
    
    # –§–æ—Ä–º–∏—Ä—É–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π —Ç–µ–∫—Å—Ç, –∏—Å–ø–æ–ª—å–∑—É—è "–∫—Ä–∞—Å–∏–≤—ã–π" –Ω–æ–º–µ—Ä –∑–∞—è–≤–∫–∏
    admin_text = (
        f"üîî *–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ #{order_number}*\n"
        f"‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n"
        f"{details_str}"
    )

    # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É, –∏—Å–ø–æ–ª—å–∑—É—è —Ä–µ–∞–ª—å–Ω—ã–π, —É–Ω–∏–∫–∞–ª—å–Ω—ã–π order_id –¥–ª—è callback_data
    admin_keyboard = InlineKeyboardMarkup(
        inline_keyboard=[
            [
                InlineKeyboardButton(text="‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å", callback_data=f"confirm_order_{order_id}_{user_id}"),
                InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∏—Ç—å", callback_data=f"reject_order_{order_id}_{user_id}")
            ],
            [InlineKeyboardButton(text="üí¨ –û—Ç–≤–µ—Ç–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é", callback_data=f"admin_reply_{user_id}")]
        ]
    )
    
    return admin_text, admin_keyboard


def get_operator_request_texts(username: str, user_id: int, data: dict) -> Tuple[str, str]:
    """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —Ç–µ–∫—Å—Ç—ã –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞ –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞."""
    action = data.get('action', '').title()
    crypto = data.get('crypto', '')
    amount_crypto = data.get('amount_crypto', 0)
    total_amount = data.get('total_amount', 0)

    user_text = (
        f"üë®‚Äçüíº *–í–∞—à–∞ –∑–∞—è–≤–∫–∞ –ø–µ—Ä–µ–¥–∞–Ω–∞ –æ–ø–µ—Ä–∞—Ç–æ—Ä—É.*\n"
        f"‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n"
        f"–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ –≤–∞—à–∏ —Ä–µ–∫–≤–∏–∑–∏—Ç—ã –≤ —Å–ª–µ–¥—É—é—â–µ–º —Å–æ–æ–±—â–µ–Ω–∏–∏.\n\n"
        f"*–ü—Ä–∏–º–µ—Ä –¥–ª—è –ø—Ä–æ–¥–∞–∂–∏:* `+79991234567, –°–±–µ—Ä–±–∞–Ω–∫`\n"
        f"*–ü—Ä–∏–º–µ—Ä –¥–ª—è –ø–æ–∫—É–ø–∫–∏:* `bc1q...`"
    )

    admin_text = (
        f"üë®‚Äçüíº *–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–ø—Ä–æ—Å–∏–ª –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞*\n"
        f"‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n"
        f"üë§ *–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:* {format_user_display_name(username)} (`{user_id}`)\n"
        f"üí≥ *–û–ø–µ—Ä–∞—Ü–∏—è:* {action} {crypto}\n"
        f"üíé *–°—É–º–º–∞:* `{f'{amount_crypto:,.8f}'.rstrip('0').rstrip('.')} {crypto}`\n"
        f"üí∞ *–ò—Ç–æ–≥–æ–≤–∞—è —Å—É–º–º–∞:* `{total_amount:,.2f} RUB`\n\n"
        f"–°–≤—è–∂–∏—Ç–µ—Å—å —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Å–¥–µ–ª–∫–∏."
    )
    return user_text, admin_text


def get_tx_link_notification(username: str, user_id: int, tx_link: str) -> Tuple[str, InlineKeyboardMarkup]:
    """–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –¥–ª—è –∞–¥–º–∏–Ω–∞ –æ —Å—Å—ã–ª–∫–µ –Ω–∞ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é."""
    admin_text = (
        f"üîó *–°—Å—ã–ª–∫–∞ –Ω–∞ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è*\n"
        f"‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n"
        f"üë§ *–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:* {format_user_display_name(username)} (`{user_id}`)\n\n"
        f"`{tx_link}`\n\n"
        f"–ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é –∏ —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º."
    )
    return admin_text, get_admin_reply_keyboard(user_id)


def get_user_reply_notification(username: str, user_id: int, user_reply: str) -> Tuple[str, InlineKeyboardMarkup]:
    """–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –¥–ª—è –∞–¥–º–∏–Ω–∞ –æ —Å–æ–æ–±—â–µ–Ω–∏–∏ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è."""
    admin_text = (
        f"üí¨ *–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è*\n"
        f"‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n"
        f"üë§ *–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:* {format_user_display_name(username)} (`{user_id}`)\n\n"
        f"üìù *–¢–µ–∫—Å—Ç:*\n{user_reply}"
    )
    return admin_text, get_admin_reply_keyboard(user_id)